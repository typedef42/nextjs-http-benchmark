version: "3"

services:
  server_next:
    build:
      context: .
      dockerfile: Dockerfile.h2-tests
      args:
        TARGET_PM2_APP: "server-next"
    image: h2-tests_server-next
    container_name: h2tests-next
    networks:
      outside-world:
      internal-network:
    ports:
      - "3000:3000"
    labels:
      - "traefik.enable=true"
      - "traefik.backend=srv-next"
      - "traefik.port=3000"
      - "traefik.frontend.rule=Host:next.test,next.localhost"
      - "traefik.frontend.entryPoints=https"

  server_https:
    build:
      context: .
      dockerfile: Dockerfile.h2-tests
      args:
        TARGET_PM2_APP: "server-https"
    image: h2-tests_server-https
    container_name: h2tests-https
    networks:
      outside-world:
      internal-network:
    ports:
      - "3001:3001"
    volumes:
      - "./certs/:/certs/"
    labels:
      - "traefik.enable=true"
      - "traefik.backend=srv-https"
      - "traefik.port=3001"
      - "traefik.protocol=https"
      - "traefik.frontend.rule=Host:https.test,https.localhost"
      - "traefik.frontend.entryPoints=https"

  server_express:
    build:
      context: .
      dockerfile: Dockerfile.h2-tests
      args:
        TARGET_PM2_APP: "server-express"
    image: h2-tests_server-express
    container_name: h2tests-express
    networks:
      outside-world:
      internal-network:
    ports:
      - "3002:3002"
    volumes:
      - "./certs/:/certs/"
    labels:
      - "traefik.enable=true"
      - "traefik.backend=srv-express"
      - "traefik.port=3002"
      - "traefik.protocol=https"
      - "traefik.frontend.rule=Host:express.test,express.localhost"
      - "traefik.frontend.entryPoints=https"

  server_fastify:
    build:
      context: .
      dockerfile: Dockerfile.h2-tests
      args:
        TARGET_PM2_APP: "server-fastify"
    image: h2-tests_server-fastify
    container_name: h2tests-fastify
    networks:
      outside-world:
      internal-network:
    ports:
      - "3003:3003"
    volumes:
      - "./certs/:/certs/"
    labels:
      - "traefik.enable=true"
      - "traefik.backend=srv-fastify"
      - "traefik.port=3003"
      - "traefik.protocol=https"
      - "traefik.frontend.rule=Host:fastify.test,fastify.localhost"
      - "traefik.frontend.entryPoints=https"

  k6:
    container_name: h2-test_k6
    image: loadimpact/k6
    networks:
      internal-network:
    ports:
      - "6565:6565"
    volumes:
      - "./benchmarks/k6/:/scripts/"
      - "./static/benchmark-output/:/output/"
    command: "version"

  benchmark:
    container_name: h2-tests_benchmark
    image: h2-tests_benchmark
    build:
      context: .
      dockerfile: Dockerfile.benchmark
    networks:
      internal-network:
    cap_add:
      - SYS_ADMIN
    volumes:
      - "./static/benchmark-output/:/output/"

  h2load:
    container_name: h2-tests_h2load
    image: h2tests-h2load
    build:
      context: .
      dockerfile: Dockerfile.h2load
    networks:
      internal-network:
    volumes:
      - "./static/benchmark-output/:/output/"

  traefik:
    container_name: h2-tests_traefik
    image: traefik:1.7.2-alpine
    command: --web --docker --docker.domain=app.test --logLevel=DEBUG
    depends_on:
      - "server_next"
      - "server_https"
      - "server_express"
      - "server_fastify"
    networks:
      outside-world:
      internal-network:
        aliases:
          - "next.test"
          - "https.test"
          - "express.test"
          - "fastify.test"
    ports:
      - "80:80"
      - "443:443"
      - "4242:4242"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./traefik/traefik.toml:/traefik.toml"
      - "./certs/:/certs/"
    restart: unless-stopped

networks:
  internal-network:
    internal: true
  outside-world:
